// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TurismoApp.Data;

#nullable disable

namespace TurismoApp.Migrations
{
    [DbContext(typeof(AgenciaTurismoContext))]
    [Migration("20250619220720_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("CidadeDestinoPacoteTuristico", b =>
                {
                    b.Property<int>("CidadesDestinoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PacotesTuristicosId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CidadesDestinoId", "PacotesTuristicosId");

                    b.HasIndex("PacotesTuristicosId");

                    b.ToTable("PacoteCidadeDestino", (string)null);
                });

            modelBuilder.Entity("TurismoApp.Models.CidadeDestino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PaisDestinoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PaisDestinoId");

                    b.ToTable("CidadesDestino");
                });

            modelBuilder.Entity("TurismoApp.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("TurismoApp.Models.PacoteTuristico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CapacidadeMaxima")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Preco")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PacotesTuristicos");
                });

            modelBuilder.Entity("TurismoApp.Models.PaisDestino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PaisDestino");
                });

            modelBuilder.Entity("TurismoApp.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataReserva")
                        .HasColumnType("TEXT");

                    b.Property<int>("PacoteTuristicoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PacoteTuristicoId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("CidadeDestinoPacoteTuristico", b =>
                {
                    b.HasOne("TurismoApp.Models.CidadeDestino", null)
                        .WithMany()
                        .HasForeignKey("CidadesDestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TurismoApp.Models.PacoteTuristico", null)
                        .WithMany()
                        .HasForeignKey("PacotesTuristicosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TurismoApp.Models.CidadeDestino", b =>
                {
                    b.HasOne("TurismoApp.Models.PaisDestino", "PaisDestino")
                        .WithMany("CidadesDestino")
                        .HasForeignKey("PaisDestinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PaisDestino");
                });

            modelBuilder.Entity("TurismoApp.Models.Reserva", b =>
                {
                    b.HasOne("TurismoApp.Models.Cliente", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TurismoApp.Models.PacoteTuristico", "PacoteTuristico")
                        .WithMany("Reservas")
                        .HasForeignKey("PacoteTuristicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("PacoteTuristico");
                });

            modelBuilder.Entity("TurismoApp.Models.Cliente", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("TurismoApp.Models.PacoteTuristico", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("TurismoApp.Models.PaisDestino", b =>
                {
                    b.Navigation("CidadesDestino");
                });
#pragma warning restore 612, 618
        }
    }
}
